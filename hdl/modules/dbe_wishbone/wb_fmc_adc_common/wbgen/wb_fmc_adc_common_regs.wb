peripheral {
  name = "FMC ADC Common registers";
  description = "Wishbone slave for FMC ADC Common";
  hdl_entity = "wb_fmc_adc_common_csr";
  prefix = "wb_fmc_adc_common_csr";

  reg {
    name = "Status register";
    prefix = "fmc_status";

    field {
      name = "MMCM locked status";
      description = "ADC Clock Chain MMCM locked status.  \
                      read 0: not locked  \
                      read 1: locked";
      prefix = "mmcm_locked";
      type = BIT;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };

    field {
      name = "FMC power good status";
      description = "FMC power good status. \
                      read 0: power not good  \
                      read 1: power good";
      prefix = "pwr_good";
      type = BIT;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };

    field {
      name = "FMC board present status";
      description = "FMC board present status.\n0: not present\n1: present";
      prefix = "prst";
      type = BIT;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };

    field {
      name = "Reserved";
      description = "Ignore on write, read as 0's";
      prefix = "reserved";
      type = SLV;
      size = 28;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };

  reg {
    name = "Trigger control";
    prefix = "trigger";

    field {
      name = "Direction";
      prefix = "dir";
      description = "Trigger direction\n0 - output\n1 - input";
      type = BIT;
      --size = 1;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "Termination Control";
      prefix = "term";
      description = "Trigger termination 50 ohm\n0 - disable\n1 - enable";
      type = BIT;
      --size = 1;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "Trigger Value";
      prefix = "trig_val";
      description = "Trigger value (when used in output mode)";
      type = BIT;
      --size = 1;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "Reserved";
      description = "Ignore on read, write with 0's.";
      prefix = "reserved";
      type = SLV;
      size = 29;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };

  };

  reg {
    name = "Monitor and FMC status control register";
    prefix = "monitor";

    field {
      name = "Enable test data";
      description = "Write the address counter value instead of ADC data to Wishbone Streaming Interface";
      prefix = "test_data_en";
      type = BIT;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "Led 1";
      prefix = "led1";
      description = "FMC LED1 (blue) - configuration in progress indicator\n0 - LED off\1 - LED on";
      type = BIT;
      --size = 1;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "Led 2";
      prefix = "led2";
      description = "FMC LED2 (red) - data acquisition in progress indicator\n0 - LED off\1 - LED on";
      type = BIT;
      --size = 1;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "Led 3";
      prefix = "led3";
      description = "FMC LED3 (green) - trigger status indicator\n0 - LED off\1 - LED on";
      type = BIT;
      --size = 1;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "MMCM reset";
      description = "write 1: reset MMCM.\
                      write 0: no effect";
      prefix = "mmcm_rst";
      -- Pulse to start
      type = BIT;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "Reserved";
      description = "Ignore on read, write with 0's.";
      prefix = "reserved";
      type = SLV;
      size = 27;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };

  };

};
